{"version":3,"sources":["redux/reducers/array.js","redux/reducers/current.js","redux/reducers/running.js","redux/reducers/speed.js","redux/reducers/size.js","redux/reducers/index.js","redux/actionTypes.js","components/Graph/Graph.jsx","redux/actions.js","components/RandomizeButton/RandomizeButton.jsx","components/SortButton/SortButton.jsx","components/SpeedSlider/SpeedSlider.jsx","components/SizeSlider/SizeSlider.jsx","App.js","index.js"],"names":["initialState","array","currentComparison","isRunning","speed","size","combineReducers","updateArray","state","action","type","payload","Graph","props","height","window","innerHeight","width","innerWidth","updateDimensions","bind","addEventListener","this","setState","removeEventListener","scale","Math","max","className","length","map","value","index","barHeight","barWidth","key","includes","style","marginLeft","Component","connect","RandomizeButton","createArray","Button","variant","disabled","onClick","dispatch","Array","from","i","floor","random","SortButton","sortArray","swap","j","tmp","sleep","ms","Promise","resolve","setTimeout","a","newArray","doSort","SpeedSlider","min","event","setSpeed","target","onChange","handleChange","newSpeed","SizeSlider","setSize","newSize","App","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46fd84d6.chunk.js","sourcesContent":["import { UPDATE_ARRAY } from \"../actionTypes\";\n\nconst initialState = {\n  array: [],\n};\n\nexport default function (state = initialState, action) {\n\n  switch (action.type) {\n    case UPDATE_ARRAY:\n      const { array } = action.payload;\n      return {\n        ...state,\n        array: array\n      };\n    default:\n      return state;\n  }\n};\n","import { SET_CURRENT } from \"../actionTypes\";\n\nconst initialState = {\n  currentComparison: []\n};\n\nexport default function (state = initialState, action) {\n\n  switch (action.type) {\n    case SET_CURRENT:\n      const { currentComparison } = action.payload;\n      return {\n        ...state,\n        currentComparison: currentComparison\n      };\n    default:\n      return state;\n  }\n};\n","import { SET_RUNNING } from \"../actionTypes\";\n\nconst initialState = {\n    isRunning: false,\n}\n\nexport default function (state = initialState, action) {\n\n  switch (action.type) {\n    case SET_RUNNING: \n      const { isRunning } = action.payload;\n      return {\n        ...state,\n        isRunning : isRunning\n      };\n    default:\n      return state;\n  }\n}","import { SET_SPEED } from \"../actionTypes\";\n\nconst initialState = {\n  speed: 50\n};\n\nexport default function (state = initialState, action) {\n\n  switch (action.type) {\n    case SET_SPEED:\n      const { speed } = action.payload;\n      return {\n        ...state,\n        speed: speed\n      };\n    default:\n      return state;\n  }\n};\n","import { SET_SIZE } from \"../actionTypes\";\n\nconst initialState = {\n  size: 25\n};\n\nexport default function (state = initialState, action) {\n\n  switch (action.type) {\n    case SET_SIZE:\n      const { size } = action.payload;\n      return {\n        ...state,\n        size: size\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport updateArray from './array';\nimport currentComparison from './current';\nimport isRunning from './running';\nimport speed from './speed';\nimport size from './size';\n\nexport default combineReducers ({\n  updateArray,\n  isRunning,\n  currentComparison,\n  speed,\n  size,\n});\n","export const UPDATE_ARRAY = 'UPDATE_ARRAY';\nexport const SET_RUNNING = 'SET_RUNNING';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const SET_SPEED = 'SET_SPEED';\nexport const SET_SIZE = 'SET_SIZE';\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport './Graph.css';\n\nclass Graph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: props.array,\n      height: window.innerHeight,\n      width:  window.innerWidth\n    }\n    this.updateDimensions = this.updateDimensions.bind(this)\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n\n\n  updateDimensions() {\n    this.setState({\n      height: window.innerHeight, \n      width: window.innerWidth\n    });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    const { array, currentComparison } = this.props;\n    const { height, width } = this.state;\n\n    if (array == null)\n    {\n      return <div/>\n    }\n    const scale = (height / 2.0) / Math.max(...array)\n\n    return (\n      <div className=\"Graph\">\n        {array.length ? array.map((value, index) => {\n          const barHeight = value * scale\n          const margin = 5\n          const barWidth = width / (array.length * 2) - margin\n          return <div key={index}\n            className={currentComparison.includes(index) ? \"currentElement\" : \"normalElement\"}\n            style={{ height: barHeight, width: barWidth, marginLeft:margin}}>\n          </div>\n        }) : null\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  const array = state.updateArray.array\n  const currentComparison = state.currentComparison.currentComparison\n  return {array, currentComparison }\n}\n \nexport default connect(mapStateToProps)(Graph);\n","import { UPDATE_ARRAY, SET_RUNNING, SET_CURRENT, SET_SPEED, SET_SIZE } from './actionTypes';\n\nexport const updateArray = array => ({\n  type: UPDATE_ARRAY,\n  payload: { array }\n});\n\nexport const isRunning = isRunning => ({\n  type: SET_RUNNING,\n  payload: { isRunning }\n})\n\nexport const currentComparison = currentComparison => ({\n  type: SET_CURRENT,\n  payload: { currentComparison }\n})\n\nexport const speed = speed => ({\n  type: SET_SPEED,\n  payload: { speed }\n})\n\nexport const size = size => ({\n  type: SET_SIZE,\n  payload: { size }\n})\n","import React, { Component } from 'react';\nimport Button  from 'react-bootstrap/Button';\nimport { updateArray } from '../../redux/actions.js';\nimport { connect } from 'react-redux';\n\nimport './RandomizeButton.css';\n\nclass RandomizeButton extends Component {\n\n  componentDidMount() {\n    const { createArray, size } = this.props;\n    createArray(size);\n    window.addEventListener(\"resize\", this.updateDimensions);\n  }\n\n  render() {\n    const { createArray, isRunning, size } = this.props;\n    return (\n      <div>\n        {isRunning ? \n          <Button\n            variant=\"secondary\"\n            className=\"RandomizeButton\"\n            disabled>\n            Randomize Array\n          </Button> :\n          <Button\n            variant=\"primary\"\n            className=\"RandomizeButton\"\n            onClick={() => {createArray(size)}}>\n            Randomize Array\n          </Button>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const array = state.updateArray.array\n  const isRunning = state.isRunning.isRunning\n  const size = state.size.size\n  return { array, isRunning, size }\n}\n\nconst mapDispatchToProps = () => dispatch => ({\n  createArray: (length) => {\n    const MIN = 8\n    const MAX = 256\n    const array = Array.from(Array(length))\n    for (var i = 0; i<length; i++) {\n      array[i]=Math.floor(Math.random() * (MAX - MIN)) + MIN;\n    }\n    dispatch(updateArray(array));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RandomizeButton);\n","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { updateArray, isRunning, currentComparison } from '../../redux/actions.js';\nimport { connect } from 'react-redux';\n\nimport './SortButton.css';\n\nclass SortButton extends Component {\n\n  render() {\n    const { sortArray, array, isRunning, speed } = this.props;\n    return (\n      <div>\n        {isRunning ? \n          <Button\n            variant=\"secondary\"\n            className=\"SortButton\"\n            disabled>\n            Sort Array\n          </Button> :\n          <Button\n            variant=\"primary\"\n            className=\"SortButton\"\n            onClick={() => {sortArray(array, speed)}}>\n            Sort Array\n          </Button>\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  const array = state.updateArray.array;\n  const isRunning = state.isRunning.isRunning;\n  const speed = state.speed.speed;\n  return { array, isRunning, speed }\n}\n\nfunction swap(array, i, j) {\n  const tmp = array[i];\n  array[i] = array[j];\n  array[j] = tmp;\n}\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst mapDispatchToProps = () => dispatch => ({\n  sortArray: (array, speed) => {\n    async function doSort() {\n      dispatch(isRunning(true))\n      for (let i = 0; i < array.length; i++){\n        for (let j = 0; j <array.length - i - 1; j++ )\n        {\n          if (array[j] > array[j+1])\n          {\n            swap(array,j, j+1)\n            const newArray=Array.from(array);\n            dispatch(updateArray(newArray));\n          }\n          dispatch(currentComparison([j, j+1]))\n          await sleep(speed);\n        }\n      }\n    dispatch(currentComparison([]))\n    dispatch(isRunning(false))\n    }\n    doSort()\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SortButton);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { speed } from '../../redux/actions.js';\nimport './SpeedSlider.css';\n\nclass SpeedSlider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      min: 1,\n      max: 200,\n      value: 50,\n    }\n  }\n\n  handleChange(event) {\n    const { setSpeed } = this.props;\n    const { min, max } = this.state;\n    // This really is more of a delay than a speed,\n    // so we have to \"reverse\" it in order for it\n    // to make more sense in the context of the slider.\n    setSpeed(max - event.target.value + min)\n    this.setState({value: event.target.value});\n  }\n\n  render() {\n    const { min, max, value} = this.state;\n    const { isRunning } = this.props;\n    return (\n    <div className=\"slidercontainer\">\n      <div>\n        Speed\n      </div>\n      <div>\n        <input\n        disabled={isRunning}\n        type=\"range\" \n        min={min}\n        max={max}\n        value={value}\n        onChange={(event) => this.handleChange(event)}/>\n      </div>\n    </div>\n    )\n    }\n  }\n  const mapStateToProps = state => {\n    const speed = state.speed.speed\n    const isRunning = state.isRunning.isRunning;\n    return { isRunning, speed }\n  }\n\n  const mapDispatchToProps = () => dispatch => ({\n    setSpeed: (newSpeed) => {\n      dispatch(speed(newSpeed))\n    }\n  });\n\n  export default connect(mapStateToProps, mapDispatchToProps)(SpeedSlider);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { size, updateArray  } from '../../redux/actions.js';\nimport './SizeSlider.css';\n\nclass SizeSlider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      min: 5,\n      max: 100,\n      value: 25,\n    }\n  }\n\n  handleChange(event) {\n    const { setSize, createArray } = this.props\n    setSize(event.target.value)\n    createArray(event.target.value)\n    this.setState({value: event.target.value});\n  }\n\n  render() {\n    const { min, max, value} = this.state;\n    const { isRunning } = this.props;\n    return (\n    <div className=\"slidercontainer\">\n      <div>\n        Size\n      </div>\n      <div>\n        <input\n        disabled={isRunning}\n        type=\"range\" \n        min={min}\n        max={max}\n        value={value}\n        onChange={(event) => this.handleChange(event)}/>\n      </div>\n    </div>\n    )\n    }\n  }\n  const mapStateToProps = state => {\n    const isRunning = state.isRunning.isRunning;\n    return { isRunning }\n  }\n\n  const mapDispatchToProps = () => dispatch => ({\n    setSize: (newSize) => {\n      dispatch(size(newSize))\n    },\n    createArray: (length) => {\n      const MIN = 8\n      const MAX = 256\n      const array = Array.from(Array(length))\n      for (var i = 0; i<length; i++) {\n        array[i]=Math.floor(Math.random() * (MAX - MIN)) + MIN;\n      }\n      dispatch(updateArray(array));\n    }\n  });\n\n  export default connect(mapStateToProps, mapDispatchToProps)(SizeSlider);\n","import React, { Component } from 'react';\nimport Graph  from './components/Graph/Graph.jsx'\nimport RandomizeButton from './components/RandomizeButton/RandomizeButton.jsx'\nimport SortButton from './components/SortButton/SortButton.jsx'\nimport SpeedSlider from './components/SpeedSlider/SpeedSlider.jsx'\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SizeSlider from './components/SizeSlider/SizeSlider.jsx';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"btn-group\">\n          <RandomizeButton/>\n          <SortButton/>\n        </div>\n        <div className=\"btn-group\">\n          <SpeedSlider/>\n          <SizeSlider/>\n        </div>\n        <Graph/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {createStore } from 'redux'\nimport rootReducer from './redux/reducers'\nimport './index.css';\nimport App from './App';\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}